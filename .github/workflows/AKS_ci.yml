name: Pull Request - Build, Test, & Scan

on:
  pull_request:
    branches:
      - main

jobs:
  build-test:
    name: Build and Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7, 3.8]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with pytest
        run: |
          pytest
  
  lint:
    name: Lint Codebase 
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.8

      - name: Install Python dependencies
        run: pip install black flake8

      - name: Run linters
        uses: wearerequired/lint-action@v1
        with:
          flake8: true
  
  build-scan-image:
    name: Build and Scan Container
    runs-on: ubuntu-latest
    needs: [lint, build-test]
    steps:
    - uses: actions/checkout@v1

    - name: Build docker image
      run: |
        docker build -t azurevote-app:${{ github.sha }} ./azure-vote
    - name: Scan container image
      uses: Azure/container-scan@v0
      with:
        image-name: azurevote-app:${{ github.sha }}
        severity-threshold: CRITICAL
        run-quality-checks: false
